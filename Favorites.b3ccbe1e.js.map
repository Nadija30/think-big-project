{"mappings":"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","sources":["src/favorites.js","src/js/favorites-recipes.js"],"sourcesContent":["import './js/burger-menu';\nimport './js/favorites-recipes';\nimport './js/footer';\nimport './js/render-cards';\nimport './js/change-theme';\nimport './js/order.modal';\nimport './js/pop-up-modal';\nimport './js/rating-modal';\n","import { initRatings } from './rating-modal';\nimport Pagination from 'tui-pagination';\nimport { Loading } from 'notiflix';\n\nconst favorCatBox = document.querySelector('.favorites__categories-list');\nconst favorGallBox = document.querySelector('.favorites__gallery-list');\nconst paginationEl = document.querySelector(`.js-pages`);\nconst notAtended = document.querySelector('.favorites__not-atendent');\nconst favorCarWrap = document.querySelector(`.favorites__categories__wrap`);\nconst allCategoriesBtn = document.querySelector(\n    `.favorites__all-categories-btn`\n);\n\nfavorCatBox.addEventListener('click', filterCards);\nallCategoriesBtn.addEventListener(`click`, () => {\n    renderCards();\n});\n\nlet categoriesArray = [];\nlet favoriteArr = [];\nlet pagination = null;\n\nlet page = 1;\nlet cardsPerPage = 12;\nlet totalPages = 1;\n\n// Опції для пагінації взяті у Олега\nconst options = {\n    totalItems: 80,\n    itemsPerPage: 8,\n    visiblePages: window.innerWidth < 768 ? 2 : 3,\n    page: 1,\n    centerAlign: false,\n    firstItemClassName: 'tui-first-child',\n    lastItemClassName: 'tui-last-child',\n    template: {\n        page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n        currentPage:\n            '<span class=\"tui-page-btn tui-is-selected\">{{page}}</span>',\n        moveButton:\n            '<a href=\"#\" class=\"tui-page-btn tui-is-active tui-{{type}}\">' +\n            '</a>',\n        disabledMoveButton:\n            '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n            '</span>',\n        moreButton:\n            '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n            '<span class=\"tui-ico-ellip\">...</span>' +\n            '</a>',\n    },\n};\n\nif (window.innerWidth < 728) {\n    cardsPerPage = 8;\n}\n\ngetFromLocalStorage();\nrenderCategoriesBtn();\nrenderCards();\ninitRatings();\n\n// Дістаємо з ЛС і кладемо картки в масив і категорії також(тут одразу фільруємо категорії)\nfunction getFromLocalStorage() {\n    for (let key in localStorage) {\n        if (key.length >= 24 && !key.includes(' ')) {\n            try {\n                const value = localStorage.getItem(key);\n                const parsedValue = JSON.parse(value);\n                favoriteArr.push(parsedValue);\n                if (!categoriesArray.includes(parsedValue.category)) {\n                    categoriesArray.push(parsedValue.category);\n                }\n            } catch (error) {\n                console.log(`Key: ${key}, Error parsing value: `, error);\n            }\n        }\n    }\n}\n\n// Рендеримо картки залежно від довжини масиву, передаємо сюди масив відфільтровіаних карток для категорій, при першому рендері дефолт це загальний масив(Треба на \"All categories\" теж додади рендер без передачі змінної)\nfunction renderCards(cardsArr = favoriteArr) {\n    // Якщо довжина менше за кіл-ть карток на сторінці то просто рендеримо картки\n    if (cardsArr.length > 0 && cardsArr.length <= cardsPerPage) {\n        // Для прибирання пагінації нативно перетираємо\n        totalPages = 1;\n        createFavCards(cardsArr);\n        createPagination();\n        favorCarWrap.classList.remove('is-hidden');\n        notAtended.classList.add('is-hidden');\n    }\n    // Якщо довжина більше за кіл-ть карток на сторінці рахуємо загальну кількість карток і при колбеку пагінації вона вже створюється\n    else if (cardsArr.length > cardsPerPage) {\n        totalPages = cardsArr.length / cardsPerPage;\n        pageItems = cardsArr.slice(0, cardsPerPage);\n        createFavCards(pageItems);\n        createPagination();\n        favorCarWrap.classList.remove('is-hidden');\n        notAtended.classList.add('is-hidden');\n    }\n    // Це не чіпав здається\n    else if (cardsArr.length === 0) {\n        if (window.innerWidth < 768) {\n            const imageBox = document.querySelector('.favorites__image-box');\n            const notAtended = document.querySelector(\n                '.favorites__not-atendent'\n            );\n            imageBox.classList.add('is-hidden');\n            notAtended.classList.add('favorites__not-atendent-empty');\n        }\n    }\n}\n// Функція створення карток, просто з твого макета, і тут ініціюємо одразу зірки\nfunction createFavCards(cards) {\n    favorGallBox.innerHTML = '';\n    cards.forEach(card => {\n        const favoriteCard = `<li class=\"favorites__gallery-list-item\">\n                   <div class=\"favorites__card\" style=\"background: var(--light-theme-background-color-cards-gradient),\n        url(${card.preview});\n    background-repeat: no-repeat;\n    background-size: cover;\">\n                    <div class=\"favorites__card-info\">\n                     <h2 class=\"favorites__card-tittle\">${card.title}</h2>\n                      <p class=\"favorites__card-description\">${\n                          card.description\n                      }</p>\n                      <div class=\"rating card__rating\"><p class=\"rating__value\">${card.rating.toFixed(\n                          1\n                      )}</p></div>\n                      <button class=\"favorites__card-btn js-see-recipe\" data-id=\"${\n                          card._id\n                      }\">See recipe</button>\n                   </div>\n                   <button class=\"favorites__card-heart\" type=\"button\">\n               <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" class=\"favorites__svg-heart\" data-id=\"${\n                   card._id\n               }\">\n               <path class=\"favorites__svg-path\" data-id=\"${\n                   card._id\n               }\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                   d=\"M10.994 4.708C9.162 2.565 6.105 1.988 3.81 3.95c-2.296 1.962-2.62 5.242-.816 7.563 1.5 1.929 6.037 5.998 7.524 7.315.166.147.25.221.346.25a.464.464 0 0 0 .262 0c.097-.029.18-.103.347-.25 1.487-1.317 6.025-5.386 7.524-7.315 1.803-2.32 1.52-5.622-.816-7.563-2.336-1.942-5.353-1.386-7.186.757Z\"\n                   clip-rule=\"evenodd\" />\n               </svg>\n               </button>\n                 </div>\n               </li>`;\n        favorGallBox.insertAdjacentHTML('beforeend', favoriteCard);\n    });\n    initRatings();\n}\n\n// Пагіная взята у Олега, підставлені наші данні, якщо чесно не дуже розбирався в ній\nfunction createPagination(cardsArr = favoriteArr) {\n    if (totalPages === 1) {\n        paginationEl.innerHTML = '';\n        return;\n    }\n\n    options.page = page;\n\n    options.totalItems = cardsArr.length + 1;\n\n    options.itemsPerPage = cardsPerPage;\n\n    pagination = new Pagination(paginationEl, options);\n\n    pagination.on('afterMove', event => {\n        options.page = event.page;\n\n        page = options.page;\n\n        Loading.dots('Loading data, please wait...');\n        const lastItemIndex = page * cardsPerPage;\n        const firstItemIndex = lastItemIndex - cardsPerPage;\n        pageItems = favoriteArr.slice(firstItemIndex, lastItemIndex);\n        createFavCards(pageItems, favorGallBox);\n        options.totalItems = cardsArr.length + 1;\n        options.itemsPerPage = cardsPerPage;\n\n        Loading.remove();\n    });\n}\n// Теж твоя функція, просто фільтруємо на моменті додавання в масив тому тут вона компактна\nfunction renderCategoriesBtn() {\n    const renderArray = categoriesArray\n        .map(item => {\n            return `<li class=\"favorites__categories-item\">\n          <button type=\"button\" class=\"favorites__categories-btn\">${item}</button>\n          </li>`;\n        })\n        .join('');\n\n    favorCatBox.insertAdjacentHTML('beforeend', renderArray);\n}\n\n// Фільтруємо масив за категорією і знову рендеримо картки\nfunction filterCards(event) {\n    pageItems = favoriteArr.filter(\n        card => card.category === event.target.textContent\n    );\n    renderCards(pageItems);\n}\n\nfavorGallBox.addEventListener('click', removeFromLocalStorageFavorites);\n\nfunction removeFromLocalStorageFavorites(event) {\n    if (event.target.tagName !== 'path') return;\n    event.target.classList.toggle('heart-svg-bg');\n    const currentHeartId = event.target.dataset.id;\n    localStorage.removeItem(`\"fav${currentHeartId}\"`);\n    location.reload();\n}\n"],"names":["parcelRequire","$jhjcb","$04debf2c8322b7a0$var$favorCatBox","document","querySelector","$04debf2c8322b7a0$var$favorGallBox","$04debf2c8322b7a0$var$paginationEl","$04debf2c8322b7a0$var$notAtended","$04debf2c8322b7a0$var$favorCarWrap","$04debf2c8322b7a0$var$allCategoriesBtn","addEventListener","event","pageItems","$04debf2c8322b7a0$var$favoriteArr","filter","card","category","target","textContent","$04debf2c8322b7a0$var$renderCards","$04debf2c8322b7a0$var$categoriesArray","$04debf2c8322b7a0$var$pagination","$04debf2c8322b7a0$var$page","$04debf2c8322b7a0$var$cardsPerPage","$04debf2c8322b7a0$var$totalPages","$04debf2c8322b7a0$var$options","totalItems","itemsPerPage","visiblePages","window","innerWidth","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","moveButton","disabledMoveButton","moreButton","cardsArr","length","$04debf2c8322b7a0$var$createFavCards","$04debf2c8322b7a0$var$createPagination","classList","remove","add","slice","imageBox","notAtended1","cards","innerHTML","forEach","favoriteCard","preview","title","description","rating","toFixed","_id","insertAdjacentHTML","initRatings","$parcel$interopDefault","$fb9GJ","on","$7Y9D8","Loading","dots","lastItemIndex","firstItemIndex","key","localStorage","includes","value","getItem","parsedValue","JSON","parse","push","error","console","log","$04debf2c8322b7a0$var$getFromLocalStorage","renderArray","map","item","join","$04debf2c8322b7a0$var$renderCategoriesBtn","tagName","toggle","currentHeartId","dataset","id","removeItem","location","reload"],"version":3,"file":"Favorites.b3ccbe1e.js.map"}